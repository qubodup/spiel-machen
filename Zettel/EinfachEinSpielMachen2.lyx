#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language ngerman
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language german
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
WORK IN PROGRESS aka STUFF THAT DIDNT MAKE IT INTO PART ONE
\end_layout

\begin_layout Standard
Jetzt wollen wir rote Bälle auf die Wiese streuen.
 
\end_layout

\begin_layout Standard
Jetzt wollen wir 20 mal einen zufälligen Punkt für jeden Ball erstellen.
 Dazu verwenden wir eine Liste, in welche wir 20 kurze Listen schreiben
 (mit 1 bis 20 nummeriert), welche jeweils einen X- und Y-Wert enthalten.
 Man könnte das so machen (lieber nicht abtippen):
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

  -- erstellt leere Liste
\end_layout

\begin_layout Plain Layout

  baelle = {}
\end_layout

\begin_layout Plain Layout

  -- weist nacheinander den ersten 20 Listenelementen Werte zu
\end_layout

\begin_layout Plain Layout

  baelle[1] = { math.random(100, 700), math.random(100, 500)}
\end_layout

\begin_layout Plain Layout

  baelle[2] = { math.random(100, 700), math.random(100, 500)}
\end_layout

\begin_layout Plain Layout

  baelle[3] = { math.random(100, 700), math.random(100, 500)}
\end_layout

\end_inset

und so weiter bis:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

  baelle[20] = { math.random(100, 700), math.random(100, 500)}
\end_layout

\end_inset

Das geht aber auch kompakter, indem wir eine 
\family typewriter
for
\family default
-Schleife verwenden, welche die gleichen Anweisungen 20 mal wiederholt.
 Wir verwenden die Variable i, die im Ersten Durchlauf gleich 1 ist, im
 zweiten Durchlauf gleich 2 ist usw.
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

  baelle = {}
\end_layout

\begin_layout Plain Layout

  -- wir zählen von 1 bis ballZahl durch
\end_layout

\begin_layout Plain Layout

  for i=1, ballZahl, +1 do
\end_layout

\begin_layout Plain Layout

    baelle[i] = { math.random(100, 700), math.random(100, 500) }
\end_layout

\begin_layout Plain Layout

  end
\end_layout

\end_inset

Die for-Schleife wird so oft wiederholt, bis 
\family typewriter
i
\family default
 den Wert von 
\family typewriter
ballZahl
\family default
 (20) erreicht.
\end_layout

\begin_layout Standard
Nun brauchen wir die Bälle nur noch zu zeichnen.
 Füge folgenden Code in 
\family typewriter
love.draw()
\family default
 ein:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

  for i=1, ballZahl, +1 do
\end_layout

\begin_layout Plain Layout

    love.graphics.circle("fill", baelle[i][1], baelle[i][2], 16 )
\end_layout

\begin_layout Plain Layout

  end
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Listen werden in Lua eigentlich 
\begin_inset Quotes gld
\end_inset

Tabelle
\begin_inset Quotes grd
\end_inset

 (Englisch: 
\begin_inset Quotes gld
\end_inset

table
\begin_inset Quotes grd
\end_inset

) genannt, weil man Listen in Listen haben kann.
 Wir werden sie sowohl Liste als auch Tabelle nennen.
\end_layout

\begin_layout Standard
0b.
 Delta time.
\end_layout

\begin_layout Standard
Nun füge 
\family typewriter
dt 
\family default
in die Klammern nach 
\family typewriter
love.update
\family default
 ein, sodass 
\family typewriter
love.update(dt)
\family default
 im Code steht.
 
\family typewriter
dt 
\family default
steht für 
\begin_inset Quotes gld
\end_inset

delta time
\begin_inset Quotes grd
\end_inset

 (Delta-Zeit, Zeitabstand, Zeitänderung).
\end_layout

\begin_layout Standard
Diese zwei Schritte erlauben LÖVE folgendes innerhalb von 
\family typewriter
love.update(dt)
\family default
 zu wissen: 
\begin_inset Quotes gld
\end_inset

Der Hund befindet sich am Punkt 
\series bold
(x,y)
\series default
 und es ist 
\series bold
dt
\series default
 Zeit vergangen, seit dem ich das letzte mal 
\family typewriter
love.update(dt)
\family default
 berechnet habe.
\begin_inset Quotes grd
\end_inset


\end_layout

\begin_layout Standard
Wenn Du das Konzept von 
\family typewriter
dt 
\family default
noch nicht verstehst, könntest Du 
\family typewriter
zeitAbstand = dt
\family default
 in 
\family typewriter
love.update(dt)
\family default
 schreiben und 
\family typewriter
love.graphics.print(zeitAbstand, 400, 400)
\family default
 in 
\family typewriter
love.draw()
\family default
, um zu beobachten, welchen Zahlenwert 
\family typewriter
dt 
\family default
hat.
 Halte Dich aber am besten nicht zu lange mit 
\family typewriter
dt
\family default
 auf.
\end_layout

\end_body
\end_document
